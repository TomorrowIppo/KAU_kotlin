#include <stdio.h>

#define MAX_NAME 100

/* 평점을 출력하는 함수
 * Kotlin 내부함수로 정의하되 인자가 없는 함수 형태로 정의하시오
 */
void printGrade(char* name, int point)
{
  char *grade;
  // 아래 문장을 if 문을 쓰지 말고 더 읽기 좋게 바꾸시오.
  // 또한 함수형 프로그래밍의 형태를 이용하시오.
  if( point >= 90 ) {
    grade = "A";
  } else if( point < 90 && point >= 80 ) {
    grade = "B";
  } else if( point < 80 && point >= 70 ) {
    grade = "C";
  } else if( point < 70 && point >= 60 ) {
    grade = "D";
  } else {
    grade = "F";
  }

  printf("%s has grade %s\n", name, grade);
}

int main()
{
  FILE* fd;
  int res;

  // file을 연다.
  fd = fopen("students.txt", "r");
  if( fd == NULL ) { // 1단계 예외처리, Kotlin에서는 FileNotFoundException이 발생
    fprintf(stderr, "File Not Found\n");
    return;
  }

  int numStudents;
  res = fscanf(fd, "%d", &numStudents);
  if( res < 0 ) { // 2단계 예외 처리, Kotlin에서는 IOException 발생한 경우
    fprintf(stderr, "File I/O Error\n");
    goto fin;
  }

  for(int i = 0; i < numStudents; i++) {
    char name[MAX_NAME];
    int point;

    res = fscanf(fd, "%s", name);
    if( res < 0 ) { // 2단계 예외 처리, Kotlin에서는 IOException 발생한 경우
      fprintf( stderr, "File I/O Error\n");
      goto fin;
    }

    res = fscanf(fd, "%d", &point);
    if( res < 0 ) { // 2단계 예외 처리, Kotlin에서는 IOException 발생한 경우
      fprintf( stderr, "File I/O Error\n");
      goto fin;
    }

    printGrade(name, point);
  }

 fin:
  fclose(fd);
}
